// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package mxgenaiconnector.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * Use this operation to retrieve chunks from a collection. This operation returns a list of KnowledgeBaseChunks.
 * 
 * Additional selection and filtering can be done by specifying the optional input parameters:
 * -Offset: this is for skipping a number of records in the retrieve (e.g. for batching purposes)
 * -MaxNumberOfResults: limit of the amount of records returned
 * -MetadataCollection: when provided, this operation only returns chunks that are conform with all of the metadata key/value pairs in the list.
 * -MxObject: This is the (original) Mendix object that the chunks in the collection represent. Only chunks related to this Mendix object are retrieved. If no filtering on Mendix object is needed, you can pass "empty".
 * 
 * The Connection entity passed must be of type MxKnowledgeBaseConnection and must contain the CollectionName string attribute filled and a MxCloudKnowledgeBase associated with the connection details to the knowledge base service. By providing the Collection on the Connection, you determine the collection for which the retrieve should happen. 
 * Use MxKnowledgeBaseConnection_Create to create it.
 */
public class KnowledgeBaseChunkList_Retrieve extends CustomJavaAction<java.util.List<IMendixObject>>
{
	private IMendixObject __Connection;
	private genaicommons.proxies.Connection Connection;
	private IMendixObject MxObject;
	private IMendixObject __MetadataCollection;
	private genaicommons.proxies.MetadataCollection MetadataCollection;
	private java.lang.Long MaxNumberOfResults;
	private java.lang.Long Offset;

	public KnowledgeBaseChunkList_Retrieve(IContext context, IMendixObject Connection, IMendixObject MxObject, IMendixObject MetadataCollection, java.lang.Long MaxNumberOfResults, java.lang.Long Offset)
	{
		super(context);
		this.__Connection = Connection;
		this.MxObject = MxObject;
		this.__MetadataCollection = MetadataCollection;
		this.MaxNumberOfResults = MaxNumberOfResults;
		this.Offset = Offset;
	}

	@java.lang.Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		this.Connection = this.__Connection == null ? null : genaicommons.proxies.Connection.initialize(getContext(), __Connection);

		this.MetadataCollection = this.__MetadataCollection == null ? null : genaicommons.proxies.MetadataCollection.initialize(getContext(), __MetadataCollection);

		// BEGIN USER CODE
		throw new com.mendix.systemwideinterfaces.MendixRuntimeException("Java action was not implemented");
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "KnowledgeBaseChunkList_Retrieve";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
