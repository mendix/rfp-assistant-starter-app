// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package myfirstrfpassistant.actions;

import java.io.InputStream;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.text.PDFTextStripper;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import myfirstrfpassistant.impl.MxLogger;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class FileDocument_ExtractContents extends CustomJavaAction<java.lang.String>
{
	private IMendixObject __FileDocument;
	private system.proxies.FileDocument FileDocument;

	public FileDocument_ExtractContents(IContext context, IMendixObject FileDocument)
	{
		super(context);
		this.__FileDocument = FileDocument;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		this.FileDocument = this.__FileDocument == null ? null : system.proxies.FileDocument.initialize(getContext(), __FileDocument);

		// BEGIN USER CODE
		try {
			validateFileDocument();
			return extractContents();
			
		} catch (Exception e) {
			LOGGER.error(e);
			throw e;
		}
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "FileDocument_ExtractContents";
	}

	// BEGIN EXTRA CODE
	private static final MxLogger LOGGER = new MxLogger(FileDocument_ExtractContents.class);
	
	private void validateFileDocument() {
		if (FileDocument == null || !FileDocument.getHasContents()) {
			throw new IllegalArgumentException("File contents are required.");
		}
		
		if(!FileDocument.getName().toLowerCase().endsWith(".pdf")) {
			throw new IllegalArgumentException("Only PDF files can be passed.");
		}
	}
	
	private String extractContents() throws Exception {
		InputStream inputStream = Core.getFileDocumentContent(getContext(), FileDocument.getMendixObject());
		PDDocument pdfdocument = PDDocument.load(inputStream);
		PDFTextStripper pdfTextStripper = new PDFTextStripper();
		return pdfTextStripper.getText(pdfdocument);
	}

	// END EXTRA CODE
}
